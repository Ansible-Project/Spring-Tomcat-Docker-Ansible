---
- hosts: all
  become: yes
  become_method: sudo
  tasks:

  - name: Create docker group
    group: name=docker state=present

  - name: add sudo user to docker group
    user: name=shriram groups=docker append=yes

  - name: Install python setup tools
    yum: name=libselinux-python

  - name: Install python setup tools
    yum: name=python-setuptools

  - name: Install Pypi
    easy_install: name=pip

  - name: Install docker-py
    pip: name=docker-py

  - name: install yum repo
    copy:
      owner=shriram
      src=files/docker.repo
      dest=/etc/yum.repos.d/docker.repo

  - name: Install docker
    yum: name={{ item }} state=latest
    with_items:
      - docker-engine

  - name: Install docker-compose through pip
    pip: name=docker-compose state=latest

  - name: Make sure Docker is running
    service: name=docker state=running
    tags: docker

  - name: stop the old container
    docker:
      name: microservices
      image: "{{ dockerImagePrefix }}/{{ projectArtifactId }}"
      state: absent

  - name: delete the old containers once the image has been successfully built
    shell: "docker rmi -f $(docker images | grep {{ dockerImagePrefix }}/{{ projectArtifactId }} | awk '{print $3}')"
    ignore_errors: yes

  - name: Start Docker Container
    docker:
      name: microservices
      image: "{{ dockerImagePrefix }}/{{ projectArtifactId }}:{{ projectVersion }}.{{buildNumber}}"
      pull: always
      insecure_registry: true
      state: reloaded
      ports:
        - "8080:8080"
      expose:
        - 8080
      env:
        profile: "{{ profile }}"
        username: "{{ username }}"
        password: "{{ password }}"
        dbhostip: "{{ dbhostip }}"

